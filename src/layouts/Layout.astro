---
import '@styles/breakpoints.css';
import '@styles/base.css';
import '@styles/theme.css';
import '@styles/animations.css';
import '@styles/components/IconButton.css';
import '@fontsource/b612';
import '@fontsource/aldrich';
import '@fontsource-variable/rem';
import Footer from "@components/Footer.astro";
import Background from "@components/Background.astro";
import { ViewTransitions } from "astro:transitions";
import Toast from "@components/Toast.astro";
interface Props {
	title: string;
	description: string;
	bgSrc: string;
	bgTitle: string;
	hasFooterContact?: boolean;
}

const { title, description, bgSrc, bgTitle, hasFooterContact } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body>
		<Toast/>
		<Background src={bgSrc} alt={bgTitle}/>
		<slot />
		<Footer hasFooterContact={hasFooterContact}/>
	</body>
</html>

<script>
	import {playPauseVideo} from "@scripts/backgroundManager";
	import {toggleMute} from "@scripts/videoManager";

	let $playPauseButton: HTMLButtonElement
	let $volumeOnOffButton: HTMLButtonElement

	const onPlayPauseButtonClick = () => {
		$playPauseButton.classList.toggle('playing')
		$volumeOnOffButton.classList.toggle('visible')
		playPauseVideo()
	}

	const onVolumeOnOffButtonClick = () => {
		$volumeOnOffButton.classList.toggle('muted')
		toggleMute()
	}

	const onPlaybackEnded = () => {
		$playPauseButton.classList.toggle('playing')
		$volumeOnOffButton.classList.toggle('visible')
	}

	document.addEventListener('astro:page-load', () => {
		window.scrollTo({top: 0, behavior: 'smooth'})
		const $metadata = document.querySelector('.metadata')
		const showMetadata = () => {
			$metadata?.classList.remove('loading')
			$metadata?.classList.add('loaded')
		}

		if ($metadata) {
			$playPauseButton = $metadata.querySelector('#play-pause-button') as HTMLButtonElement;
			$volumeOnOffButton = $metadata.querySelector('#volume-on-off-button') as HTMLButtonElement;
			showMetadata()
			addEventListeners()
		}
	})

	document.addEventListener('astro:before-preparation', () => {
		removeEventListeners()
	})

	function addEventListeners() {
		$playPauseButton?.addEventListener('click', onPlayPauseButtonClick)
		$volumeOnOffButton?.addEventListener('click', onVolumeOnOffButtonClick)
		document.addEventListener('playback-ended', onPlaybackEnded)
	}

	function removeEventListeners() {
		$playPauseButton?.removeEventListener('click', onPlayPauseButtonClick)
		$volumeOnOffButton?.removeEventListener('click', onVolumeOnOffButtonClick)
		document.removeEventListener('playback-ended', onPlaybackEnded)
	}
</script>
