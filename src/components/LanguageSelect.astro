---
import {
    getLangFromUrl,
    useTranslations,
    getLanguages
} from "@i18n/utils"
import CheckCircle from "@icons/CheckCircle.astro";
import {getTranslatedUrl} from "@i18n/utils";

const currentLanguage = getLangFromUrl(Astro.url)
const translation = useTranslations(currentLanguage)
const availableLanguages = getLanguages()
const languages = Object.entries(availableLanguages)
const currentUrl = Astro.url

console.log('-->', currentUrl)
---
<section class="language-select hidden">
    <h3 class="title">{translation('select.language.title')}</h3>
    <ul class="language-list">
        {languages.map(([language, label]) => {
            const isCurrentLanguage = language === currentLanguage
            let languageHref = getTranslatedUrl(currentLanguage, language, currentUrl).href

            return (
                    <li class="language-item">
                        <span class="selected">{isCurrentLanguage && <CheckCircle/>}</span>
                        <a class="language-link" href={languageHref}>{label}</a>
                    </li>)
        })}
    </ul>
</section>

<style>
    .language-select {
        display: flex;
        flex-direction: column;
        position: absolute;
        width: 100vw;
        height: 100dvh;
        background-color: hsla(var(--color-background-dark-values), 95%);
        justify-content: center;
        align-items: center;
        z-index: 1;

        .title {
            font-family: 'Aldrich', sans-serif;
            font-weight: 400;
            font-size: 3.25rem;
            color: var(--color-text-secondary)
        }

        .language-list {
            display: flex;
            padding: 10px;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
            gap: 8px;
            font-family: 'REM Variable', sans-serif;
            font-size: 2rem;
            list-style: none;

            .language-item {
                display: flex;
                gap: 0.5rem;
                align-items: center;

                .selected {
                    display: inline-block;
                    width: 32px;
                    height: 32px;
                }

                .language-link {
                    text-decoration: none;
                    color: var(--color-text-paragraph);

                    &:hover {
                        color: var(--color-accent-primary)
                    }
                }
            }
        }
    }
</style>