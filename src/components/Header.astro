---
import {getLangFromUrl, useTranslations, getLocaleUrlRelative} from "@i18n/utils";
import LanguageIcon from '@icons/Language.astro'
import Button from "@components/Button.astro";
const {classNames} = Astro.props
const lang = getLangFromUrl(Astro.url)
const href = getLocaleUrlRelative(lang, '/')
const translations = useTranslations(lang)
---
<header class={`header loading ${classNames}`}>
    <div class="container">
        <div class="logo">
            <a href={href}>
                <slot />
            </a>
        </div>
        <Button id="select-language" type="languages" text="" ariaLabel={translations('select.language.arialabel')}>
            <LanguageIcon/>
        </Button>
    </div>
</header>

<style>
    .header {
        padding: 2rem var(--layout-padding-x) 0;
        align-self: flex-start;
        grid-row: auto;
        grid-column: 1;
        z-index: 1;
    }

    .container {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;

        .languages {
            display: inline-flex;
            padding: 0.375rem 0.625rem;
            justify-content: center;
            align-items: center;
            gap: 0.625rem;

            border-radius: 0.2rem;
            border: 0.0625rem solid var(--color-border);
            background: var(--color-background-cinema);
            color: var(--color-background-neutral);

            font-family: 'REM Variable', sans-serif;
            font-size: 0.85rem;
            font-style: normal;
            line-height: normal;

            transition: all 0.3s var(--smooth-transition-function);

            svg {
                width: 40px;
                height: 40px;
            }

            &:hover {
                background:var(--color-background-neutral);
                color: var(--color-background-cinema);
            }
        }
    }

    & .hidden {
        .logo {
            opacity: 0;
            pointer-events: none;
        }
    }

    .logo {
        display: flex;
        flex-direction: row;
        align-items: center;

        a {
            display: flex;
            align-items: center;
            text-decoration: none;
            gap: 1rem;

            &:hover {
                svg {
                    animation: float 4s ease-in-out infinite;
                }

                h2 {
                    transform: scale(1.05);
                }
            }

            svg {
                height: 4rem;
                transition: 0.6s transform var(--smooth-transition-function);
            }

            h2 {
                font-size: 1.5rem;
                line-height: 1.5rem;
                margin: 0;
                font-family: 'Aldrich', sans-serif;
                color: var(--color-accent-hover);
                transform: scale(1);
                transition: 0.3s transform ease-in-out;
            }
        }
    }
</style>